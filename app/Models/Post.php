<?php

namespace App\Models;

use Astrotomic\Translatable\Contracts\Translatable as TranslatableContract;
use Astrotomic\Translatable\Translatable;
use Cviebrock\EloquentSluggable\Sluggable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class Post extends Model implements TranslatableContract
{
    use HasFactory, Translatable, Sluggable;
    protected $translationForeignKey = 'post_id';

    public $translatedAttributes  = [
        'title',
        'body',
        'slug'
    ];
    protected $fillable = ['title', 'body', 'slug', 'image', 'category_id'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting( function ($post) {
            if ($post->image)
            {
                Storage::disk('public')->delete($post->image);
            }
        });
    }

    public function category()
    {
        return $this->belongsTo(Category::class, 'category_id', 'id');
    }

    public function sluggable(): array
    {
        return [
            'slug' => [
                'source' => 'slug',
            ]
        ];
    }

}
